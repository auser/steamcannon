#topology
  %h2 Topology
  - for image in sort_images_by_service_display_order(@environment.environment_images)
    - div_for( image ) do
      %h3
        &= image.image.name
        - if @environment.running? and image.can_start_more?
          = link_to 'Add Instance', environment_instances_path(@environment.id, :environment_image_id => image.id), :method => :post
      - if image.instances.empty?
        .empty
          No running instances.
      %table
        - image.instances.each_with_index do |instance, i|
          = render :partial=>'/instances/row', :locals=>{ :instance=>instance }
          %tr.instance_message{style_display_none.merge(:id => "instance_#{instance.id}_message")}
            %td(colspan="3")

          - javascript_tag do
            ="monitor_instance('#{status_environment_instance_path(instance.environment.id, instance.id)}', '##{dom_id(instance)}');"
  %h3 Storage Volumes
  - if @environment.storage_volumes.empty?
    .empty
      No storage volumes.
  %table
    - @environment.storage_volumes.each do |volume|
      = render 'storage_volumes/row', :volume => volume
      - javascript_tag do
        ="monitor_volume('#{status_environment_storage_volume_path(volume.environment.id, volume.id)}', '##{dom_id(volume)}');"
